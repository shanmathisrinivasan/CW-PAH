
import React from 'react';
import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';
import Home from './components/Home';
import Products from './components/Products';
import CategoryContextProvider from './contexts/CategoryContext';
import PriceFilterContextProvider from './contexts/PriceFilterContext';

const App = () => {
  return (
    <Router>
      <Switch>
        <Route path="/" exact component={Home} />
        <Route path="/products" component={Products} />
      </Switch>
    </Router>
  );
};

export default App;
// components/Home.js
import React from 'react';

const Home = () => {
  return (
    <div>
      <h1>Welcome to Our Online Store</h1>
    </div>
  );
};

export default Home;
// components/Products.js
import React from 'react';
import ProductList from './ProductList';
import CategoryFilter from './CategoryFilter';
import PriceFilter from './PriceFilter';

const Products = () => {
  return (
    <div>
      <h2>Products</h2>
      <CategoryFilter />
      <PriceFilter />
      <ProductList />
    </div>
  );
};

export default Products;
// contexts/CategoryContext.js
import React, { createContext, useState, useEffect } from 'react';

export const CategoryContext = createContext();

const CategoryContextProvider = ({ children }) => {
  const [categories, setCategories] = useState([]);

  useEffect(() => {
    // Fetch categories from API endpoint
    // For simplicity, let's assume the API returns an array of category objects
    fetch('YOUR_CATEGORY_API_ENDPOINT')
      .then(response => response.json())
      .then(data => setCategories(data))
      .catch(error => console.error('Error fetching categories:', error));
  }, []);

  return (
    <CategoryContext.Provider value={{ categories }}>
      {children}
    </CategoryContext.Provider>
  );
};

export default CategoryContextProvider;
// contexts/PriceFilterContext.js
import React, { createContext, useState } from 'react';

export const PriceFilterContext = createContext();

const PriceFilterContextProvider = ({ children }) => {
  const [priceRange, setPriceRange] = useState({ min: 0, max: 100 });

  const updatePriceRange = (min, max) => {
    setPriceRange({ min, max });
  };

  return (
    <PriceFilterContext.Provider value={{ priceRange, updatePriceRange }}>
      {children}
    </PriceFilterContext.Provider>
  );
};

export default PriceFilterContextProvider;
// components/CategoryFilter.js
import React, { useContext } from 'react';
import { CategoryContext } from '../contexts/CategoryContext';

const CategoryFilter = () => {
  const { categories } = useContext(CategoryContext);

  return (
    <div>
      <h3>Filter by Category</h3>
      <select>
        <option value="">All Categories</option>
        {categories.map(category => (
          <option key={category.id} value={category.id}>
            {category.name}
          </option>
        ))}
      </select>
    </div>
  );
};

export default CategoryFilter;
// components/PriceFilter.js
import React, { useContext } from 'react';
import { PriceFilterContext } from '../contexts/PriceFilterContext';

const PriceFilter = () => {
  const { priceRange, updatePriceRange } = useContext(PriceFilterContext);

  const handlePriceChange = () => {
    // Logic to update price range
  };

  return (
    <div>
      <h3>Filter by Price</h3>
      <input
        type="range"
        min="0"
        max="100"
        value={priceRange.min}
        onChange={handlePriceChange}
      />
      <span>{priceRange.min} - {priceRange.max}</span>
    </div>
  );
};

export default PriceFilter;
// components/ProductList.js
import React from 'react';

const ProductList = () => {
  // Logic to fetch and display products based on filters

  return (
    <div>
      <h3>Product List</h3>
      {/* Display products */}
    </div>
  );
};

export default ProductList;
